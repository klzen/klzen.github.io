<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uva on AC之路</title>
    <link>https://klzen.github.io/categories/uva/</link>
    <description>Recent content in Uva on AC之路</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 10 Aug 2018 07:39:19 +0800</lastBuildDate>
    
	<atom:link href="https://klzen.github.io/categories/uva/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2014 04 02 Uva 401 Palindrome</title>
      <link>https://klzen.github.io/posts/2014-04-02-uva-401-palindrome/</link>
      <pubDate>Fri, 10 Aug 2018 07:39:19 +0800</pubDate>
      
      <guid>https://klzen.github.io/posts/2014-04-02-uva-401-palindrome/</guid>
      <description>问题简介 给定一段由字符与数字组成的字符串，判断它是否是回文字。
如果组成字符串的全部都是自反：如A，T这样的字符，则为mirrored palindrome
或者由E3等mirror字符组成的，则为mirrored string
普通情况下为reqular palindrome
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86  #include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;numeric&amp;gt;#include &amp;lt;bitset&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;stack&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;cmath&amp;gt; using namespace std; #define fe(i, a, b) for (int i = int(a); i &amp;lt;= int(b); i++) #define fu(i, a, b) for (int i = int(a); i &amp;lt; int(b); i++) typedef vector&amp;lt;int&amp;gt; vi; typedef vector&amp;lt;vi&amp;gt; vvi; typedef vector&amp;lt;bool&amp;gt; vb; typedef vector&amp;lt;vb&amp;gt; vvb; typedef pair&amp;lt;int, int&amp;gt; pii; #define pb push_back #define mp make_pair  string chars = &amp;#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789&amp;#34;; string c_revers= &amp;#34;A 3 HIL JM O TUVWXY51SE Z 8 &amp;#34;; int solve(string s) { int l = 0, r = s.</description>
    </item>
    
  </channel>
</rss>